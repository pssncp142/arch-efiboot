# Arch-efiboot configuration file

# ESP partition. If not fat32, program will abort for safety.
# Set FORCE=1 to disable check.
ESP=/boot

# Default is 0. Checks if $ESP is fat32.
FORCE=0

# Directory inside ESP to put .efi executables (eg. $ESP/$TARGET_ESP/linux.efi)  
# If the executables are in EFI/Linux, systemd-boot can auto-detect entries.
TARGET_ESP=EFI/Linux

# Kernel parameters to include in efi executables.          
# If CMDLINE is set in this file, it will be used as is.
# So, if CMDLINE is empty, no kernel parameters will be included!
# If it is not set, /proc/cmdline will be used.      
#CMDLINE=

# The following can be used for kernel specific parameters.
# For example, CMDLINE_LINUX= will be appended to CMDLINE= for linux kernel.
# And, CMDLINE_LINUX_LTS= will be appended to CMDLINE= for linux-lts kernel.
# So on, so forth. Setting these parameters does not have impact on the 
# program flow. They will be only appended if CMDLINE= is set.
# 
CMDLINE_LINUX=""
CMDLINE_LINUX_LTS=""

# For each preset defined in here, the following will happen instead:
# 1- Includes kernel image: $BOOTDIR/initramfs-$KERNEL-$PRESET.img
# 2- Final EFI file will be : $TARGET/$KERNEL-$PRESET.efi
# 3- If stored in EFI/Linux: Arch Linux - ${PRESET^} (...)
# The "default" preset ignores suffixes and should be included for $BOOTDIR/initramfs-linux.img.
# The main use of this paremeter is to build EFI exec for fallback image as well.
# Also, the options dont have to be mkinitcpio presets per se. You may have a custom image
# generated with dracut and named initramfs-linux-dracut.img. To generate an EFI exec from this
# include "dracut" to PRESETS below.
PRESETS=("default")
#PRESETS=("default" "fallback")


